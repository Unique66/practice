赫夫曼编码原理：（前缀编码）

1）传入字符串
    i like like like java do you like a java
2）d:1 y:1 u:1 j:2 v:2 o:2 l:4 k:4 e:4 i:5 a:5  :9 // 各字符对应的个数

3）按照上面字符出现的次数构建一颗赫夫曼树，次数作为权值
构建赫夫曼树
    1）从小到大进行排序，将每一个数据，当成一个节点，每个节点可以看成一颗最简单的二叉树
    2）取出根节点权值最小的两颗二叉树
    3）组成一颗新的二叉树，该新的二叉树的根节点的权值是前面两颗二叉树根节点权值的和
    4）再将这颗新的二叉树，以根节点的权值大小再次排序，不断重复 1-2-3-4步骤，直到数列中，所有数据都被处理，就得到一颗赫夫曼树

4）根据赫夫曼树，给各个字符规定编码（前缀编码），向左的路径为0，向右的路径为1，编码如下：
    o:1000  u:10010  d:100110  y:100111  i:101
    a:110  k:1110  e:1111  j:0000  v:0001
    l:001   :01

5）按照上面的赫夫曼编码，我们的字符串"i like like like java do you like a java"  对应的编码为（这里是无损压缩）
10101001....   通过赫夫曼编码处理，长度为133

    将所有出现的字符根据出现次数 按照赫夫曼规则（小的放在后面，大的放在上面）摆放。
    向左 0，向右1，这样每一个字符就对应有自己的编码规范了
    将此二进制编码再转为10进制，与字符对应，就是赫夫曼编码表